

services:
  # PostgreSQL service
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: catalyst_count_db
      POSTGRES_PASSWORD: catalyst_count_db
      POSTGRES_DB: catalyst_count_db
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  # Redis service
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - backend
    volumes:
      - redis_data:/data

  # Django app service
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - RUNNING_IN_DOCKER=True
      - DB_NAME=catalyst_count_db
      - DB_USER=catalyst_count_db
      - DB_PASSWORD=catalyst_count_db
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - backend

  # Celery worker service
  celery:
    build: .
    command: celery -A catalyst_count worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - RUNNING_IN_DOCKER=True
      - DB_NAME=catalyst_count_db
      - DB_USER=catalyst_count_db
      - DB_PASSWORD=catalyst_count_db
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  redis_data: